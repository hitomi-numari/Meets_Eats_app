{"ast":null,"code":"// turbolinks の読み込みが終わった後にidを取得しないと，エラーが出ます。\ndocument.addEventListener('turbolinks:load', function () {\n  // js.erb 内で使用できるように変数を定義しておく\n  window.messageContainer = document.getElementById('message-container'); // 以下のプログラムが他のページで動作しないようにしておく\n\n  if (messageContainer === null) {\n    return;\n  }\n\n  consumer.subscriptions.create(\"RoomChannel\", {\n    connected: function connected() {},\n    disconnected: function disconnected() {},\n    received: function received(data) {\n      // サーバー側から受け取ったHTMLを一番最後に加える\n      messageContainer.insertAdjacentHTML('beforeend', data['message']);\n    }\n  });\n  var documentElement = document.documentElement; // js.erb 内でも使用できるように変数を決定\n\n  window.messageContent = document.getElementById('message_content'); // 一番下まで移動する関数。js.erb 内でも使用できるように変数を決定\n\n  window.scrollToBottom = function () {\n    window.scroll(0, documentElement.scrollHeight);\n  }; // 最初にページ一番下へ移動させる\n\n\n  scrollToBottom();\n  var messageButton = document.getElementById('message-button'); // 空欄でなければボタンを有効化，空欄なら無効化する関数\n\n  var button_activation = function button_activation() {\n    if (messageContent.value === '') {\n      messageButton.classList.add('disabled');\n    } else {\n      messageButton.classList.remove('disabled');\n    }\n  }; // フォームに入力した際の動作\n\n\n  messageContent.addEventListener('input', function () {\n    button_activation();\n    changeLineCheck();\n  }); // 送信ボタンが押された時にボタンを無効化し，フォーム行数を１に戻す\n\n  messageButton.addEventListener('click', function () {\n    messageButton.classList.add('disabled');\n    changeLineCount(1);\n  }); // フォームの最大行数を決定\n\n  var maxLineCount = 10; // 入力メッセージの行数を調べる関数\n\n  var getLineCount = function getLineCount() {\n    return (messageContent.value + '\\n').match(/\\r?\\n/g).length;\n  };\n\n  var lineCount = getLineCount();\n  var newLineCount;\n\n  var changeLineCheck = function changeLineCheck() {\n    // 現在の入力行数を取得（ただし，最大の行数は maxLineCount とする）\n    newLineCount = Math.min(getLineCount(), maxLineCount); // 以前の入力行数と異なる場合は変更する\n\n    if (lineCount !== newLineCount) {\n      changeLineCount(newLineCount);\n    }\n  };\n\n  var footer = document.getElementById('footer');\n  var footerHeight = footer.scrollHeight;\n  var newFooterHeight, footerHeightDiff;\n\n  var changeLineCount = function changeLineCount(newLineCount) {\n    // フォームの行数を変更\n    messageContent.rows = lineCount = newLineCount; // 新しいフッターの高さを取得し，違いを計算\n\n    newFooterHeight = footer.scrollHeight;\n    footerHeightDiff = newFooterHeight - footerHeight; // 新しいフッターの高さをチャット欄の padding-bottom に反映し，スクロールさせる\n    // 行数が増える時と減る時で操作順を変更しないとうまくいかない\n\n    if (footerHeightDiff > 0) {\n      messageContainer.style.paddingBottom = newFooterHeight + 'px';\n      window.scrollBy(0, footerHeightDiff);\n    } else {\n      window.scrollBy(0, footerHeightDiff);\n      messageContainer.style.paddingBottom = newFooterHeight + 'px';\n    }\n\n    footerHeight = newFooterHeight;\n  };\n});","map":{"version":3,"sources":["/Users/hitomi.n/workspace/meets_eats/app/javascript/packs/messages/index.js"],"names":["document","addEventListener","window","messageContainer","getElementById","consumer","subscriptions","create","connected","disconnected","received","data","insertAdjacentHTML","documentElement","messageContent","scrollToBottom","scroll","scrollHeight","messageButton","button_activation","value","classList","add","remove","changeLineCheck","changeLineCount","maxLineCount","getLineCount","match","length","lineCount","newLineCount","Math","min","footer","footerHeight","newFooterHeight","footerHeightDiff","rows","style","paddingBottom","scrollBy"],"mappings":"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","sourcesContent":["// turbolinks の読み込みが終わった後にidを取得しないと，エラーが出ます。\ndocument.addEventListener('turbolinks:load', () => {\n\n    // js.erb 内で使用できるように変数を定義しておく\n    window.messageContainer = document.getElementById('message-container')\n\n    // 以下のプログラムが他のページで動作しないようにしておく\n    if (messageContainer === null) {\n        return\n    }\n\n    consumer.subscriptions.create(\"RoomChannel\", {\n        connected() {\n        },\n\n        disconnected() {\n        },\n\n        received(data) {\n            // サーバー側から受け取ったHTMLを一番最後に加える\n            messageContainer.insertAdjacentHTML('beforeend', data['message'])\n        }\n    })\n\n    const documentElement = document.documentElement\n    // js.erb 内でも使用できるように変数を決定\n    window.messageContent = document.getElementById('message_content')\n    // 一番下まで移動する関数。js.erb 内でも使用できるように変数を決定\n    window.scrollToBottom = () => {\n        window.scroll(0, documentElement.scrollHeight)\n    }\n\n    // 最初にページ一番下へ移動させる\n    scrollToBottom()\n\n    const messageButton = document.getElementById('message-button')\n\n    // 空欄でなければボタンを有効化，空欄なら無効化する関数\n    const button_activation = () => {\n        if (messageContent.value === '') {\n            messageButton.classList.add('disabled')\n        } else {\n            messageButton.classList.remove('disabled')\n        }\n    }\n\n    // フォームに入力した際の動作\n    messageContent.addEventListener('input', () => {\n        button_activation()\n        changeLineCheck()\n    })\n\n    // 送信ボタンが押された時にボタンを無効化し，フォーム行数を１に戻す\n    messageButton.addEventListener('click', () => {\n        messageButton.classList.add('disabled')\n        changeLineCount(1)\n    })\n    // フォームの最大行数を決定\n    const maxLineCount = 10\n\n    // 入力メッセージの行数を調べる関数\n    const getLineCount = () => {\n        return (messageContent.value + '\\n').match(/\\r?\\n/g).length;\n    }\n\n    let lineCount = getLineCount()\n    let newLineCount\n\n    const changeLineCheck = () => {\n        // 現在の入力行数を取得（ただし，最大の行数は maxLineCount とする）\n        newLineCount = Math.min(getLineCount(), maxLineCount)\n        // 以前の入力行数と異なる場合は変更する\n        if (lineCount !== newLineCount) {\n            changeLineCount(newLineCount)\n        }\n    }\n\n    const footer = document.getElementById('footer')\n    let footerHeight = footer.scrollHeight\n    let newFooterHeight, footerHeightDiff\n\n    const changeLineCount = (newLineCount) => {\n        // フォームの行数を変更\n        messageContent.rows = lineCount = newLineCount\n        // 新しいフッターの高さを取得し，違いを計算\n        newFooterHeight = footer.scrollHeight\n        footerHeightDiff = newFooterHeight - footerHeight\n        // 新しいフッターの高さをチャット欄の padding-bottom に反映し，スクロールさせる\n        // 行数が増える時と減る時で操作順を変更しないとうまくいかない\n        if (footerHeightDiff > 0) {\n            messageContainer.style.paddingBottom = newFooterHeight + 'px'\n            window.scrollBy(0, footerHeightDiff)\n        } else {\n            window.scrollBy(0, footerHeightDiff)\n            messageContainer.style.paddingBottom = newFooterHeight + 'px'\n        }\n        footerHeight = newFooterHeight\n    }\n})\n"]},"metadata":{},"sourceType":"module"}